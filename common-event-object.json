{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type":"object",
    "definitions": {
      "eventObject": {
        "$id": "/properties/eventObject",
        "type":"object",
        "description": "Event objects are JSON structures that are automatically constructed and passed as parameters to trigger or callback functions when a user interacts with an add-on (https://developers.google.com/workspace/add-ons/concepts/event-objects)",
        "properties": {
          "commonEventObject": {
            "$ref": "#/definitions/commonEventObject"
          },
          "authorizationEventObject": {
            "$ref": "#/definitions/authorizationEventObject",
            "description": "Set for requests to HTTP endpoints"
          },
          "gmail": {
            "$ref": "./gmail-event-object.json#/definitions/gmailEventObject",
            "description": "An object containing Gmail information."
          },
          "drive": {
            "$ref": "drive-event-object.json#/definitions/driveEventObject",
            "description": "An object containing Drive information."
          },
          "docs": {
            "$ref": "docs-event-object.json#/definitions/docsEventObject",
            "description": "An object containing Docs information."
          },
          "sheets": {
            "$ref": "./google-sheets-event-object.json#/definitions/sheetsEventObject",
            "description": "An object containing Sheets information."
          },
          "slides": {
            "$ref": "./google-slides-event-object.json#/definitions/slidesEventObject",
            "description": "An object containing Slides information."
          },
          "calendar": {
            "$ref": "calendar-event-object.json#/definitions/calendarEventObject",
            "description": "An object containing calendar and event information."
          }
        }
      },
      "commonEventObject": {
        "$id": "/properties/commonEventObject",
        "type":"object",
        "description": "An object containing information common to all event objects, regardless of the host application.",
        "properties": {
          "userLocale": {
            "type": "string",
            "description": "The user's language and country/region identifier in the format of ISO 639 language code-ISO 3166 country/region code. For example, en-US."
          },
          "hostApp": {
            "type": "string",
            "description": "Indicates the host app the add-on is active in when the event object is generated. Possible values include the following:\nGMAIL\nCALENDAR\nDRIVE",
            "enum": ["GMAIL", "DRIVE", "CALENDAR"]
          },
          "platform": {
            "type": "string",
            "description": "Indicates where the event originates (`WEB`, `IOS`, or `ANDROID`)",
            "enum": ["WEB", "ANDRIOD", "IOS"]
          },
          "timeZone": {
            "type": "object",
            "$ref": "#/definitions/timeZone",
            "description": "The timezone ID and offset. To enable this field, you must set `addOns.common.useLocaleFromApp` to `true` in your add-on's manifest. Your add-on's scope list must also include `https://www.googleapis.com/auth/script.locale`\n See https://developers.google.com/workspace/add-ons/how-tos/access-user-locale for more details"
          },
          "formInputs": {
            "type": "object",
            "description": "A map containing the current values of the widgets in the displayed card. The map keys are the string IDs assigned with each widget, and each value is another wrapper object with a single \"\" key.",
            "additionalProperties": {
              "type":"object",
              "properties": {
                "stringInputs": {
                  "$ref": "#/definitions/stringInputs"
                },
                "dateTimeInput": {
                  "$ref": "#/definitions/dateTimeInput"
                },
                "dateInput": {
                  "$ref": "#/definitions/dateInput"
                },
                "timeInput": {
                  "$ref": "#/definitions/timeInput"
                }
              }
            }
          },
          "parameters": {
            "type": "object",
            "description": "Any additional parameters.",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "authorizationEventObject": {
        "type": "object",
        "properties": {
          "userOAuthToken": {
            "description": "The end user OAuth access token, authorized with the requested scopes",
            "type": "string"
          },
          "userIdToken": {
            "type": "string",
            "description": "An end-user ID token, if appropriate ID scopes are requested"
          },
          "systemIdToken": {
            "type": "string",
            "description": "An ID token for the Google Workspace Add-ons service account for this deployment"
          }
        }
      },
      "timeZone": {
        "$id": "/properties/timeZone",
        "type":"object",
        "properties": {
          "id": {
            "type":"string",
            "description": "The timezone identifier of the user's timezone. Examples include: America/New_York, Europe/Vienna, and Asia/Seoul. To enable this field, you must set `addOns.common.useLocaleFromApp` to `true` in your add-on's manifest. Your add-on's scope list must also include `https://www.googleapis.com/auth/script.locale`. See https://developers.google.com/workspace/add-ons/how-tos/access-user-locale for more details"
          },
          "offset": {
            "type": "integer",
            "description": "The time offset from Coordinated Universal Time (UTC) of the user's timezone, measured in milliseconds. See https://developers.google.com/workspace/add-ons/how-tos/access-user-locale for more details",
            "minimum": -2147483648,
            "maximum": 2147483647
          }
        }
      },
      "stringInputs": {
        "$id": "/properties/stringInputs",
        "type":"object",
        "description": "Input parameter for regular widgets.\nFor single-valued widgets, it will be a single value list; for\nmulti-valued widgets, such as checkbox, all the values are presented.",
        "properties": {
          "value": {
            "type":"array",
            "items": {
              "type":"string"
            }
          }
        }
      },
      "dateTimeInput": {
        "$id": "/properties/dateTimeInput",
        "type": "object",
        "description": "Input Parameter for Date and Time Picker widget.",
        "properties": {
          "msSinceEpoch": {
            "type": "integer",
            "description": "The time selected by the user, in milliseconds since epoch (00:00:00 UTC on 1 January 1970).",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "hasDate": {
            "type": "boolean",
            "description": "true if the input date time includes a date; if false only a time is included."
          },
          "hasTime": {
            "type": "boolean",
            "description": "true if the input date time includes a time; if false only a date is included."
          }
        }
      },
      "dateInput": {
        "$id": "/properties/dateInput",
        "type": "object",
        "description": "Input Parameter for Date Picker widget.",
        "properties": {
          "msSinceEpoch": {
            "type": "integer",
            "description": "The time selected by the user, in milliseconds since epoch (00:00:00 UTC on 1 January 1970).",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          }
        }
      },
      "timeInput": {
        "description": "Input Parameter for Time Picker widget.",
        "$id": "/properties/timeInput",
        "type": "object",
        "properties": {
          "hours": {
            "type": "integer",
            "description": "The hour number selected by the user.",
            "minimum": 0,
            "maximum": 23
          },
          "minutes": {
            "type": "integer",
            "description": "The minute number selected by the user.",
            "minimum": 0,
            "maximum": 59
          }
        }
      }
    },
    "$ref": "#/definitions/eventObject"
  }
    